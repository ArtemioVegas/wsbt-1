<?xml version="1.0"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag" />
<!--    <rule ref="rulesets/cleancode.xml/ElseExpression" />-->
    <rule ref="rulesets/cleancode.xml/IfStatementAssignment" />
<!--    <rule ref="rulesets/cleancode.xml/StaticAccess" />-->
    <rule ref="rulesets/cleancode.xml/DuplicatedArrayKey" />
<!--    <rule ref="rulesets/cleancode.xml/MissingImport" />-->
    <rule ref="rulesets/cleancode.xml/UndefinedVariable" />

    <rule ref="rulesets/codesize.xml/CyclomaticComplexity" />
    <rule ref="rulesets/codesize.xml/NPathComplexity" />
    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength" />
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength" />
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList" />
    <rule ref="rulesets/codesize.xml/ExcessivePublicCount" />
    <rule ref="rulesets/codesize.xml/TooManyFields" />
    <rule ref="rulesets/codesize.xml/TooManyMethods">
        <properties>
            <property name="ignorepattern" value="/^(get|set|is|add|remove|find|test)/" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/TooManyPublicMethods">
        <properties>
            <property name="ignorepattern" value="/^(get|set|is|add|remove|find|test)/" />
        </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/ExcessiveClassComplexity" />

    <rule ref="rulesets/controversial.xml/Superglobals" />
    <rule ref="rulesets/controversial.xml/CamelCaseClassName" />
    <rule ref="rulesets/controversial.xml/CamelCasePropertyName" />
    <rule ref="rulesets/controversial.xml/CamelCaseMethodName" />
    <rule ref="rulesets/controversial.xml/CamelCaseParameterName" />
    <rule ref="rulesets/controversial.xml/CamelCaseVariableName" />

    <rule ref="rulesets/design.xml/ExitExpression" />
    <rule ref="rulesets/design.xml/EvalExpression" />
    <rule ref="rulesets/design.xml/GotoStatement" />
    <!--    <rule ref="rulesets/design.xml/NumberOfChildren" />-->
    <rule ref="rulesets/design.xml/DepthOfInheritance" />
    <rule ref="rulesets/design.xml/DevelopmentCodeFragment" />
    <!--    <rule ref="rulesets/design.xml/EmptyCatchBlock" />-->
    <rule ref="rulesets/design.xml/CountInLoopExpression" />

    <rule ref="rulesets/naming.xml/ShortVariable">
        <properties>
            <property name="exceptions" value="id,to,ip" />
        </properties>
    </rule>
<!--    <rule ref="rulesets/naming.xml/LongVariable" />--> <!-- todo: uncomment this rule when there will be able to add exceptions for repository variables -->
    <rule ref="rulesets/naming.xml/ShortMethodName">
        <properties>
            <property name="exceptions" value="up" />
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />
    <rule ref="rulesets/naming.xml/ConstantNamingConventions" />
    <rule ref="rulesets/naming.xml/BooleanGetMethodName" />

    <rule ref="rulesets/unusedcode.xml/UnusedPrivateField" />
<!--    <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable" />-->
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod" />
<!--    <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter" />-->

</ruleset>
